/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_print_ptr.c                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: scespede <scespede@student.42barcel>       +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/06/05 18:07:11 by scespede          #+#    #+#             */
/*   Updated: 2023/06/09 21:47:17 by scespede         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ft_printf.h"
#include "includes/libft.h"
#include <stdio.h>

int contarDigitosHexadecimales(unsigned long long num) {
    int contador = 0;

    if (num == 0) {
        return 1; // El número 0 tiene un solo dígito hexadecimal
    }

    while (num != 0) {
        num = num / 16; // Dividir por 16 para obtener el siguiente dígito hexadecimal
        contador++;
    }

    return contador;
}

int hexprint(unsigned long long num, char f)
{
	char hexChar;
               if (f == 'x')
            {
                hexChar = (num - 10) + 'a';
                write(1, &hexChar, 1);
            }
            if (f == 'X')
            {
                hexChar = (num - 10) + 'A';
                write(1, &hexChar, 1);
            }
 
	return 1;
}

static int	hexdecimal(unsigned long long num, char f)
{
	printf("entras");
    if (num >= 16)
    {
        hexdecimal(num / 16, f);
        hexdecimal(num % 16, f);
    }
    else
    {
        char hexChar; // Variable para almacenar el carácter hexadecimal

        if (num <= 9)
        {
            hexChar = num + '0';
            write(1, &hexChar, 1);
        }
        else
        {
            if (f == 'x')
            {
                hexChar = (num - 10) + 'a';
                write(1, &hexChar, 1);
            }
            if (f == 'X')
            {
                hexChar = (num - 10) + 'A';
                write(1, &hexChar, 1);
            }
	}
    }
    return (1);
}

int ft_print_ptr(va_list argv, int *i)
{
    unsigned long long address = va_arg(argv, unsigned long long); // Dirección de memoria del puntero

	int check;
	check = 0;
	if (address == 0)
	{
   		if(write(1, "0x0", 3))
			return (-1);
   	}
	else 
   	{
	   check = contarDigitosHexadecimales(address) + 2;
	   printf("\nvalor de check %d",check);
	   if(write(1, "0x", 2))
		   return (-1);
	   hexdecimal(address, 'x') ;
  	 }
	(*i)++;
    return check;
}

